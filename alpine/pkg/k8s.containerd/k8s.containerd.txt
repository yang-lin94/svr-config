#!/bin/bash
if ! ls /root &>/dev/null; then
  echo 'Please use "sudo bash" to run' && exit 1
fi

if ! grep -q 'Alpine.*Linux' /etc/os-release; then
  read -rp 'Ops, Not Alpine Linux, Press any key to continue.' && exit 1
fi

# disable swap
wget -qO - https://raw.githubusercontent.com/yang-lin94/svr-config/refs/heads/main/alpine/sys/disableSwap/disableSwap.txt | bash

# disable ipv46
wget -qO - https://raw.githubusercontent.com/yang-lin94/svr-config/refs/heads/main/alpine/sys/ipv46/ipv46.txt | bash

# setting
tee /etc/modules-load.d/containers.conf <<EOF
br_netfilter
overlay
fuse
ip_tables
EOF
modprobe br_netfilter
modprobe overlay
modprobe fuse
modprobe ip_tables

tee /etc/local.d/containers.start <<EOF
mount --make-rshared /
mount --make-rshared /sys
EOF
chmod a+x /etc/local.d/containers.start
bash /etc/local.d/containers.start

# install containerd
# ----------
# apk update && install
apk add containerd cri-tools\
  --no-cache \
  --update-cache \
  --allow-untrusted \
  --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \
  --repository http://dl-cdn.alpinelinux.org/alpine/edge/community
mkdir -p /etc/containerd
containerd config default > /etc/containerd/config.toml
tee /etc/crictl.yaml <<EOF
runtime-endpoint: unix:///var/run/containerd/containerd.sock
image-endpoint: unix:///var/run/containerd/containerd.sock
timeout: 2
EOF

# start service at boot
rc-update add containerd
rc-service containerd start
rc-update add cgroups
rc-service cgroups start

# install k8s
# ----------
# apk update && install
apk add kubeadm kubelet kubectl etcd-ctl \
  --no-cache \
  --update-cache \
  --allow-untrusted \
  --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \
  --repository http://dl-cdn.alpinelinux.org/alpine/edge/community
tee /etc/profile.d/kubectl-env.sh <<EOF
source <(kubectl completion bash)
EOF

# start service at boot
rc-update add kubelet
rc-service kubelet start

# configure containerd for Kubernetes
sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
rc-service containerd restart

# download Kubernetes images
kubeadm config images pull

# patch pause image
PAUSE=$(ctr --namespace k8s.io images list | awk '{print $1}' | grep -P 'pause:[0-9]+\.[0-9]+')
sed -i "s|sandbox_image = .*|sandbox_image = \"${PAUSE}\"|" /etc/containerd/config.toml

# fix kubelet log
mkdir -p /etc/kubernetes/manifests
apk add --no-cache --update-cache dbus
dbus-uuidgen --ensure=/etc/machine-id