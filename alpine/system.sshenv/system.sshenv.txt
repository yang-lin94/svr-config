#!/bin/bash
if ! ls /root &>/dev/null; then
  echo 'Please use "sudo bash" run' && exit 1
fi

if ! grep -q 'Alpine.*Linux' /etc/os-release; then
  read -rp 'Ops, Not Alpine Linux, Press any key to continue.' && exit 1
fi

# ssh_config client use
grep -x 'StrictHostKeyChecking no' /etc/ssh/ssh_config || echo '    StrictHostKeyChecking no' | tee -a /etc/ssh/ssh_config

# sshd_config server use
grep -x 'X11UseLocalhost yes' /etc/ssh/sshd_config || echo 'X11UseLocalhost yes' | tee -a /etc/ssh/sshd_config
grep -x 'PermitRootLogin no' /etc/ssh/sshd_config || echo 'PermitRootLogin no' | tee -a /etc/ssh/sshd_config
grep -x 'PermitUserEnvironment yes' /etc/ssh/sshd_config || echo 'PermitUserEnvironment yes' | tee -a /etc/ssh/sshd_config
grep -x 'HostKeyAlgorithms +ssh-ed25519' /etc/ssh/sshd_config || echo 'HostKeyAlgorithms +ssh-ed25519' | tee -a /etc/ssh/sshd_config
grep -x 'PubkeyAcceptedKeyTypes +ssh-ed25519' /etc/ssh/sshd_config || echo 'PubkeyAcceptedKeyTypes +ssh-ed25519' | tee -a /etc/ssh/sshd_config

# restart service
ssh-keygen -t ed25519 -A

# set sshenv
for user in /home/*; do
  user=$(basename "$user")
  if [ ! -f /home/"${user}"/.ssh/id_ed25519 ]; then
    su "${user}" -c "ssh-keygen -t ed25519 -P '' -f ~/.ssh/id_ed25519 &>/dev/null"
    su "${user}" -c "cat ~/.ssh/id_ed25519.pub | tee -a ~/.ssh/authorized_keys"
  fi
  chmod -R 700 /home/"${user}"/.ssh
  chmod 600 /home/"${user}"/.ssh/id_ed25519
  chmod 644 /home/"${user}"/.ssh/id_ed25519.pub
done
